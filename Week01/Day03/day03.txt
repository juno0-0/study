지역변수 : 그 지역(메서드)에서만 쓰는 변수
	  메서드를 탈출하면 사라진다.
전역변수 : 메서드 밖에서 쓰는 변수

for문 : 반복 횟수를 알고 있을 때 주로 사용
	(조건이 거짓이면 for문을 종료)

while문 : 조건에 따라 반복을 계속할지 결정할 때 사용
	(조건이 거짓이면 for문을 종료)

do-while문 : 먼저 수행을 하고 조건 검사해서 반복 결정
	     조건에 따라 반복을 계속할지 결정할 때 사용하는건 while과 동일
	     처음부터 거짓이어도 수행은 1회 한다.(무조건 1번은 실행)
	     
break : if를 사용할 때 거짓이면 아래를 수행하지 않고 {}을 탈출한다.

continue : if를 사용할 때 거짓이면 아래를 수행하지 않고 반복문 시작으로 돌아간다.

"%5d" = 정수가 들어갈 자리 5칸
	1을 넣으면 xxxx1 
	1003을 넣으면 x1003
	10000을 넣으면 10000

"%5.2f" = 5는 5칸을 뜻한다.
	.2는 소수점 2자리
	정수2자리 . 소수점2자리
	     2      1         2      = 5

while문을 사용할 때 당장은 반복을 안하지만 나중에 해야할 때
변수에 true나 false를 넣고 while(변수)로 준다.



while(조건식){
	조건이 참일 때 처리할 내용
}

-------------------------------------------

do{
	조건이 참일 때 처리할 내용	
}while(조건식)

-------------------------------------------

for(초깃값;조건식;증감식){
	조건이 참일 때 처리할 내용
}
조건식은 1개만 가능하다. (초깃값, 증감식은 여러개도 가능하다.)
조건식을 여러개 사용해야 할 경우 &&, ||를 사용한다.

초깃값은 for문 밖에 선언하고 for문에서는 생략할 수 있다.
	for(;i<10;i++){

	}

증감식도 for문 안에 조건이 참일 때 처리할 내용에 넣고 for문 선언 시 생략할 수 있다.
	for(;i<10;){
		i++;
	}

for(;;) = 무한반복	while(true)와 같다.
조건이 참일 때 처리할 내용에 break;로 멈춘다.

조건식이 참인데 !를 만나면 거짓, 거짓인데 !를 만나면 참

API에서 메서드명()이라 표기되면 메서드 사용시 입력 값이 없는 것.

Math Class : 수학에 관련된 메서드를 모아놓은 클래스
난수를 만들어내는 메서드(난수 = 예상하지 못한 수)
Math.random() : 
	//기본은 0.0 <= Math.random() < 1.0
	//1~3까지 랜덤하게 나오는 수를 만들어 보기 (1~100까지면)
	//1단계 원하는 수의 가장 큰수를 곱함 
	//0.0*3 <= Math.random()*3 < 1.0*3 (*100)
	//0.0 <= Math.random()*3 < 3.0
	//2단계 정수형으로 형변환한다.
	//(int)0.0 <= (int)Math.random()*3 < (int)3.0
	//0 <= (int)Math.random()*3 < 3
	//3단계 각변에 1을 더한다. (안하면 1~3이 아니라 0~2가 나온다.)
	//0+1 <= (int)Math.random()*3+1 < 3+1
	//1 <= (int)Math.random()*3+1 < 4
	System.out.println((int)(Math.random()*3)+1);

단축키 ctrl+shift+/	  =    /* ~ */ 주석

Integer.parseInt(String 매개변수) = 매개변수에 있는 문자열을 정수형으로 바꿔준다.
			        문자지만 순수하게 숫자로만 이루어진 것을 정수로 바꿈

Math.abs( ) : 절대값을 구하는 메서드
		-521을 넣으면 521 리턴

* 반복문 확인할 때 한컴에서 표 만들어서 변수를 입력하고
	값을 넣어가면서 확인하면
	반복문이 돌아가는 구조를 알 수 있다.
	i	j	값
	0	0	
	0	1	
	1	0	
	1	1

배열 : 동일한 자료 타입의 묶음

foreach문(향상된 for문)
for(타입 변수명 : 배열 또는 컬렉션){	//넣을게 있으면 참, 없으면 거짓
	//반복할 문장;
}

ex)	int[] number = {1,2,3,4,5};
	   type name   Array
	for(int n_value:number) {
		System.out.println(n_value);
	}