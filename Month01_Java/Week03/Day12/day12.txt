상속
	부모클래스 (상위클래스, 슈퍼클래스, 기반클래스)
	자식클래스 (하위클래스, 서브클래스, 파생클래스)

	- 부모 클래스의 멤버를 자식 클래스에게 물려주는 것
	- 자식이 부모를 선택한다.
	- 공통적인 것은 부모 클래스에 넣고 부모 클래스에 없는 것은 자식 클래스에서 생성한다.
	   (자식 클래스 = 부모 클래스 + @)
	- 부모는 1개지만 자식은 여러개 가능 = Java의 상속은 단일 상속만 가능
	   (자식이 여러명일 수 있지만 부모는 여러명일 수 없다 = 다중 상속 불가능)
	- 상속을 받으면 객체화를 하지 않아도 부모 클래스의 멤버를 사용할 수 있다.
	   (상속 받지 않은 다른 클래스의 멤버를 사용하려면 객체화하면 된다.)
	- 부모에 있는 메소드이름과 같은 메소드를 자식에서 선언하면 메소드를 재정의한 것
	   (호출 시 자식에서 재정의한 메소드가 호출된다.) 
	- 자식 클래스에서 멤버를 메소드를 재정의하지 않았다면 
	   호출하였을 때 부모의 멤버를 가지고 온다.
	   (메인에서 자식객체명.부모멤버로 접근가능)
	- 상속은 오버라이딩에 강제성이 없음
	- 상속에서 자식의 생성자(기본, 명시적 상관없음)가 메모리에 올라갈 때(객체화)
	   메모리에 부모의 기본 생성자를 먼저 메모리에 올리고
	   자식의 생성자가 메모리에 올라간다.
	   (부모의 명시적 생성자가 있어도 부모의 기본 생성자를 호출한다.)
	   (부모 클래스가 명시적 생성자만 만들고 기본 생성자를 만들지 않았을 때
	    자식 클래스의 생성자를 호출하면 오류가 발생한다. 
	    = 상속을 할 경우 부모 클래스의 기본 생성자는 반드시 있어야 한다.)

public ColorPoint(String color, int x, int y) {
	this.color=color;  //자식의 color에 매개변수 color을 넣는다.
	super.x=x;  //부모의 x에 매개변수 x를 넣는다.
	super.y=y;
}
	



