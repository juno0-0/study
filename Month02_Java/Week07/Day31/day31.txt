제네릭
 - 클래스와 인터페이스, 메소드를 정의할 때 
    타입을 파라미터로 사용할 수 있도록 해주는 것
 - 사용하는 이유
   · 잘못된 타입이 사용될 수 있는 문제를 컴파일 과정에서 제거할 수 있도록
 - 특징
   · 타입 변환을 제거
   · 컴파일시 강한 타입 체크
 - 타입
   · 타입을 파라미터로 가지는 클래스와 인터페이스
 - 멀티 타입 파라미터
   · class<K, V>
   · 두개 이상의 멀티 타입 파라미터를 사용할 수 있는데
     이 경우 각 타입 파라미터를 ","로 구분

 - 제네릭 메소드
   · 매개 타입과 리턴 타입으로 타입 파라미터를 갖는 메소드
   · 접근제한자<T, ...> 리턴타입<T, ...> 메소드명(매개변수, ...){ }

 - 제한된 타입 파라미터
   · <T extends 최상위 타입>
   · 타입 파라미터에 지정되는 구체적인 제한이 필요할 때 사용
   · 아무리 높아도 최상위 타입의 밑(직계자손)에만 가능
     ex) T extendes Number하면
         Integer, Long, Double, Byte 등만 들어갈 수 있는 것
    generic2 패키지 참고

※ parameter : 매개변수